[tool.poetry]
name = "cappa"
version = "0.17.3"
description = "Declarative CLI argument parser."

repository = "https://github.com/dancardin/cappa"
authors = ["DanCardin <ddcardin@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = [
  "CLI",
  "parser",
  "argparse",
  "click",
  "typer",
]
classifiers = [
  "Topic :: Software Development :: Libraries :: Python Modules",
]

packages = [{include = "cappa", from = "src"}]
include = [
    "*.md",
    "py.typed",
]

[tool.poetry.dependencies]
python = ">=3.8,<4"

typing-extensions = ">=4.8.0"
typing-inspect = ">=0.9.0"
rich = "*"
eval_type_backport = {version = "*", python = "<3.10"}

docstring-parser = {version = ">=0.15", optional = true}

[tool.poetry.extras]
docstring = ["docstring-parser"]

[tool.poetry.group.dev.dependencies]
attrs = "*"
coverage = "^7.3.0"
mypy = ">=1.0"
pydantic = "*"
pytest = "^7.4.0"
ruff = "^0.2.2"
docutils = "*"
typing-extensions = ">=4.8.0"
types-docutils = "^0.20.0.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = ["C", "D", "E", "F", "I", "N", "Q", "RET", "RUF", "S", "T", "UP", "YTT"]
ignore = [
    "C901",
    "E501",
    "S101",
    "D1",
    "D203",
    "D213",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["T201"]
"src/cappa/parser.py" = ["N818"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "assert_never",
]

[tool.coverage.run]
branch = true
parallel = true
include = ["src/*"]

[tool.mypy]
strict_optional = true
ignore_missing_imports = true
warn_unused_ignores = true
incremental = true
check_untyped_defs = true

[tool.pytest.ini_options]
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS"
addopts = "--doctest-modules -vv --ff --strict-markers"
norecursedirs = ".* build dist *.egg bin"
pytester_example_dir = "tests/examples"
markers = [
  "help",
]
