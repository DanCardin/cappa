[project]
name = "cappa"
version = "0.22.5"
description = "Declarative CLI argument parser."

urls = {repository = "https://github.com/dancardin/cappa"}
authors = [
  {name = "Dan Cardin", email = "ddcardin@gmail.com"},
]
license = {file = "LICENSE"}
readme = "README.md"
keywords = [
  "CLI",
  "parser",
  "argparse",
  "click",
  "typer",
]
classifiers = [
  "Topic :: Software Development :: Libraries :: Python Modules",
]

include = [
  "py.typed",
]

requires-python = ">=3.8,<4"

dependencies = [
  "typing-extensions >= 4.8.0",
  "typing-inspect >= 0.9.0",
  "rich",
  "eval_type_backport; python_version < '3.10'",
]

[project.optional-dependencies]
docstring = ["docstring-parser >= 0.15"]

[tool.uv]
dev-dependencies = [
  "pytest >=8.1.1,<9",
  "coverage >= 7.3.0",
  "mypy >= 1.0.0",
  "ruff >= 0.6.2",
  "docutils >= 0.20.0",
  "typing-extensions >= 4.8.0",
  "types-docutils >= 0.20.0",

  "attrs",
  "pydantic",
  "msgspec; python_version < '3.13'",
]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = ["C", "D", "E", "F", "I", "N", "Q", "RET", "RUF", "S", "T", "UP", "YTT"]
ignore = [
    "C901",
    "E501",
    "S101",
    "D1",
    "D203",
    "D213",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["T201"]
"src/cappa/parser.py" = ["N818"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:",
  "if __name__ == .__main__.:",
  "assert_never",
]

[tool.coverage.run]
branch = true
parallel = true
include = ["src/*"]

[tool.mypy]
strict_optional = true
ignore_missing_imports = true
warn_unused_ignores = true
incremental = true
check_untyped_defs = true

[tool.pytest.ini_options]
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS"
addopts = "--doctest-modules -vv --ff --strict-markers"
norecursedirs = ".* build dist *.egg bin"
pytester_example_dir = "examples"
markers = [
  "help",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
